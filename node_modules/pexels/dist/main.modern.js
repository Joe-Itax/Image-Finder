const t={photo:"https://api.pexels.com/v1/",video:"https://api.pexels.com/videos/",collections:"https://api.pexels.com/v1/collections/"};function e(e,o){const r={method:"GET",headers:{Accept:"application/json","Content-Type":"application/json","User-Agent":"Pexels/JavaScript",Authorization:e}},n=t[o];return(t,e)=>fetch(`${n}${t}?${function(t){return Object.keys(t).map(e=>`${e}=${t[e]}`).join("&")}(e||{})}`,r).then(t=>{if(!t.ok)throw new Error(t.statusText);return t.json()})}function o(t){const o=e(t,"collections");return{all:(t={})=>o("",t),media:({id:t,...e})=>o(""+t,e),featured:(t={})=>o("featured",t)}}function r(t){return!(!t||!t.photos)}var n={__proto__:null,isPhotos:r,isVideos:function(t){return!(!t||!t.videos)},isError:function(t){return!!t.error}};function i(t){const o=e(t,"photo");return{search:t=>o("/search",t),curated:(t={})=>o("/curated",t),show:({id:t})=>o("/photos/"+t),async random(){const t=Math.floor(1e3*Math.random()),e=await this.curated({page:t,per_page:1});return r(e)?e.photos[0]:e}}}function s(t){const o=e(t,"video");return{search:t=>o("/search",t),popular:(t={})=>o("/popular",t),show:({id:t})=>o("/videos/"+t)}}function c(t){if(!t||"string"!=typeof t)throw new TypeError("An ApiKey must be provided when initiating the Pexel's client.");return{typeCheckers:n,photos:i(t),videos:s(t),collections:o(t)}}require("isomorphic-fetch");export{c as createClient};
//# sourceMappingURL=main.modern.js.map
